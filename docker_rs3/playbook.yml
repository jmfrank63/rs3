###########################################################
# Infrastructure for environment inside one virtual machine
###########################################################
---
- hosts: all
  become: true
  vars_files:
    - vars/defaults.yml
    - vars/defaults-{{ansible_architecture}}.yml

  tasks:
    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'curl', 'python3-pip' ]

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Pull default Docker image
      docker_image:
        name: "{{ default_container_image }}"
        source: pull


    - name: Create frontend network
      become: yes
      docker_network:
        name: "{{ default_container_frontend_network_name }}"
        ipam_config:
          - iprange: "{{ default_container_ip_range }}"
            subnet: "{{ default_container_frontend_subnet }}"
            gateway: "{{ default_container_frontend_gateway }}"

    - name: Create backend network
      docker_network:
        name: "{{ default_container_backend_network_name }}"
        ipam_config:
          - iprange: "{{ default_container_ip_range }}"
            subnet: "{{ default_container_backend_subnet }}"
            gateway: "{{ default_container_backend_gateway }}"

    # Creates the number of containers defined by the variable create_containers, using values from vars file
    - name: Create default containers
      docker_container:
        name: "{{ default_container_name }}{{ item }}"
        image: "{{ default_container_image }}"
        state: started
        container_default_behavior: no_defaults
        published_ports: "{{ default_container_frontend_prefix }}{{ item }}:8080:8080"
        network_mode: default
        networks:
          - name: "{{ default_container_frontend_network_name }}"
            ipv4_address: "{{ default_container_frontend_prefix }}{{ item }}"
          - name: "{{ default_container_backend_network_name }}"
            ipv4_address: "{{ default_container_backend_prefix }}{{ item }}"
      with_sequence: count={{ create_containers }}